// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderAccessors.Contexts;

namespace OrderAccessors.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    [Migration("20201011184131_CamelCaseRename")]
    partial class CamelCaseRename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("order_api")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OrderCore.Entities.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .HasColumnName("customer_name")
                        .HasColumnType("text");

                    b.Property<string>("CustomerNumber")
                        .HasColumnName("customer_number")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnName("state")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnName("zip_code")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("OrderCore.Entities.LineItemEntity", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnName("order_id")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnName("product_id")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<decimal>("Discount")
                        .HasColumnName("discount")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemCode")
                        .HasColumnName("item_code")
                        .HasColumnType("text");

                    b.Property<int?>("OrderEntityId")
                        .HasColumnName("order_entity_id")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnName("total_price")
                        .HasColumnType("numeric");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("pk_line_items");

                    b.HasIndex("OrderEntityId")
                        .HasName("ix_line_items_order_entity_id");

                    b.ToTable("line_items");
                });

            modelBuilder.Entity("OrderCore.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CompletedDate")
                        .HasColumnName("completed_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("integer");

                    b.Property<string>("OrderName")
                        .HasColumnName("order_name")
                        .HasColumnType("text");

                    b.Property<string>("OrderNumber")
                        .HasColumnName("order_number")
                        .HasColumnType("text");

                    b.Property<string>("OrderStatus")
                        .HasColumnName("order_status")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_orders");

                    b.HasIndex("CustomerId")
                        .HasName("ix_orders_customer_id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("OrderCore.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnName("item_code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnName("price")
                        .HasColumnType("numeric");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products");
                });

            modelBuilder.Entity("OrderCore.Entities.LineItemEntity", b =>
                {
                    b.HasOne("OrderCore.Entities.OrderEntity", null)
                        .WithMany("LineItems")
                        .HasForeignKey("OrderEntityId")
                        .HasConstraintName("fk_line_items_orders_order_entity_id");
                });

            modelBuilder.Entity("OrderCore.Entities.OrderEntity", b =>
                {
                    b.HasOne("OrderCore.Entities.CustomerEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("fk_orders_customers_customer_id");
                });
#pragma warning restore 612, 618
        }
    }
}
